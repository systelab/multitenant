version: "3"
services:
  dblaboratory:
    image: postgres:14.1
    container_name: dblaboratory
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=laboratory
      - POSTGRES_USER=laboratory
      - POSTGRES_PASSWORD=laboratory
    volumes:
      - ./data:/var/lib/postgresql/data
  dbinventory:
    image: postgres:14.1
    container_name: dbinventory
    restart: always
    ports:
      - "5433:5433"
    environment:
      - POSTGRES_DB=inventory
      - POSTGRES_USER=inventory
      - POSTGRES_PASSWORD=inventory
    volumes:
      - ./data2:/var/lib/postgresql/data
    command: -p 5433
  redis:
    image: redis:6.2.6
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
  discovery1:
    image: discovery-service:0.0.2-SNAPSHOT
    container_name: discovery1
    ports:
      - "8761:8761"
    environment:
      - server.port=8761
      - eureka.client.serviceUrl.defaultZone=http://discovery2:8762/eureka/
  discovery2:
    image: discovery-service:0.0.2-SNAPSHOT
    container_name: discovery2
    ports:
      - "8762:8762"
    environment:
      - server.port=8762
      - eureka.client.serviceUrl.defaultZone=http://discovery1:8761/eureka/
  tenant1:
    image: tenant-service:0.0.2-SNAPSHOT
    container_name: tenant1
    ports:
      - "7070:7070"
    environment:
      - server.port=7070
      - redis.host=redis
      - redis.port=6379
      - eureka.client.serviceUrl.defaultZone=http://discovery1:8761/eureka/,http://discovery2:8762/eureka/
      - opentracing.jaeger.http-sender.url=http://jaeger:14268/api/traces

    depends_on:
      - redis
  tenant2:
    image: tenant-service:0.0.2-SNAPSHOT
    container_name: tenant2
    ports:
      - "7071:7071"
    environment:
      - server.port=7071
      - redis.host=redis
      - redis.port=6379
      - eureka.client.serviceUrl.defaultZone=http://discovery1:8761/eureka/,http://discovery2:8762/eureka/
      - opentracing.jaeger.http-sender.url=http://jaeger:14268/api/traces

    depends_on:
      - redis
  laboratory1:
    image: laboratory-service:1.0
    container_name: laboratory1
    ports:
      - "8080:8080"
    depends_on:
      - dblaboratory
    environment:
      - server.port=8080
      - spring.sql.init.mode=always
      - spring.datasource.url=jdbc:postgresql://dblaboratory:5432/laboratory
      - spring.datasource.username=laboratory
      - spring.datasource.password=laboratory
      - eureka.client.serviceUrl.defaultZone=http://discovery1:8761/eureka/,http://discovery2:8762/eureka/
  laboratory2:
    image: laboratory-service:1.0
    container_name: laboratory2
    ports:
      - "8081:8081"
    depends_on:
      - dblaboratory
    environment:
      - server.port=8081
      - spring.sql.init.mode=never
      - spring.datasource.url=jdbc:postgresql://dblaboratory:5432/laboratory
      - spring.datasource.username=laboratory
      - spring.datasource.password=laboratory
      - eureka.client.serviceUrl.defaultZone=http://discovery1:8761/eureka/,http://discovery2:8762/eureka/
  laboratory3:
    image: laboratory-service:1.0
    container_name: laboratory3
    ports:
      - "8082:8082"
    depends_on:
      - dblaboratory
    environment:
      - server.port=8082
      - spring.sql.init.mode=never
      - spring.datasource.url=jdbc:postgresql://dblaboratory:5432/laboratory
      - spring.datasource.username=laboratory
      - spring.datasource.password=laboratory
      - eureka.client.serviceUrl.defaultZone=http://discovery1:8761/eureka/,http://discovery2:8762/eureka/
  inventory1:
    image: inventory-service:1.0
    container_name: inventory1
    ports:
      - "8060:8060"
    depends_on:
      - dbinventory
    environment:
      - server.port=8060
      - spring.sql.init.mode=always
      - spring.datasource.url=jdbc:postgresql://dbinventory:5433/inventory
      - spring.datasource.username=inventory
      - spring.datasource.password=inventory
      - eureka.client.serviceUrl.defaultZone=http://discovery1:8761/eureka/,http://discovery2:8762/eureka/
      - opentracing.jaeger.http-sender.url=http://jaeger:14268/api/traces
  inventory2:
    image: inventory-service:1.0
    container_name: inventory2
    ports:
      - "8061:8061"
    depends_on:
      - dbinventory
    environment:
      - server.port=8061
      - spring.sql.init.mode=never
      - spring.datasource.url=jdbc:postgresql://dbinventory:5433/inventory
      - spring.datasource.username=inventory
      - spring.datasource.password=inventory
      - eureka.client.serviceUrl.defaultZone=http://discovery1:8761/eureka/,http://discovery2:8762/eureka/
      - opentracing.jaeger.http-sender.url=http://jaeger:14268/api/traces

  gateway1:
    image: gateway-service:0.0.1-SNAPSHOT
    container_name: gateway1
    ports:
      - "9090:9090"
    environment:
      - server.port=9090
      - eureka.client.serviceUrl.defaultZone=http://discovery1:8761/eureka/,http://discovery2:8762/eureka/
      - opentracing.jaeger.http-sender.url=http://jaeger:14268/api/traces
  gateway2:
    image: gateway-service:0.0.1-SNAPSHOT
    container_name: gateway2
    ports:
      - "9091:9091"
    environment:
      - server.port=9091
      - eureka.client.serviceUrl.defaultZone=http://discovery1:8761/eureka/,http://discovery2:8762/eureka/
      - opentracing.jaeger.http-sender.url=http://jaeger:14268/api/traces
  prometheus:
    image: prom/prometheus:v2.32.1
    container_name: prometheus
    ports:
      - "9999:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
  grafana:
    image: grafana/grafana:8.3.3
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - /var/lib/grafana
    links:
      - prometheus
  jaeger:
    image: jaegertracing/all-in-one:1.29
    container_name: jaeger
    ports:
    - "6831:6831/udp"
    - "6832:6832/udp"
    - "16686:16686"
    - "14268:14268"
  nginx:
    image: nginx:1.21.5
    container_name: nginx
    ports:
      - "80:80"
    privileged: true
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf